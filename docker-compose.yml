version: '3.9'

volumes:
  media:
  static:
  menu-db_data:
  menu-redis_data:
  portainer_data:

networks:
  menu-net:
    driver: bridge

services:
  menu-server:
    container_name: menu-server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/menubot
      - media:/media
    env_file:
      - ./.env.dev
    ports:
      - "8000:8000"
    networks:
      - menu-net

  menu-redis:
    container_name: menu-redis
    restart: unless-stopped
    image: redis:alpine
    ports:
      - "127.0.0.1:6379:6379"
    command: redis-server --requirepass $${REDIS_PASSWORD} --bind 0.0.0.0 --protected-mode yes
    volumes:
      - menu-redis_data:/data
    env_file:
      - ./.env.dev
    networks:
      - menu-net

  menu-db:
    container_name: menu-db
    restart: always
    image: postgres
    volumes:
      - menu-db_data:/var/lib/postgresql/data
    env_file:
      - ./.env.dev
    environment:
      - POSTGRES_DB=menudb
      - POSTGRES_USER=menudb
      - POSTGRES_PASSWORD=menudb
    ports:
      - "5432:5432"
    networks:
      - menu-net

  menu-bot:
    container_name: menu-bot
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: python bot/launcher.py
    ports:
      - "8081:8081"
    volumes:
      - .:/menubot
    env_file:
      - ./.env.dev
    depends_on:
      - menu-db
    networks:
      - menu-net

#  menu-beat:
#    container_name: menu-beat
#    restart: always
#    build:
#      context: .
#      dockerfile: Dockerfile
#    volumes:
#      - .:/menubot
#    env_file:
#      - ./.env.dev
#    depends_on:
#      - menu-worker
#      - menu-server
#    networks:
#      - menu-net
#    command: "celery -A MenuBot.celery_app beat --loglevel=INFO"

  menu-worker:
    container_name: menu-worker
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/menubot
    env_file:
      - ./.env.dev
    networks:
      - menu-net
    command: "celery -A MenuBot.celery_app worker --loglevel=INFO"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    environment:
      - TZ=Asia/Almaty
    ports:
      - "9000:9000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
